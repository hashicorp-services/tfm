---
  name: end-to-end-test
  
  on:
    schedule:
      - cron: 25 6 * * *
    workflow_dispatch:
  
  jobs:
    initialize-tfc-resources:
      runs-on: "ubuntu-latest"
      env:
        TF_CLOUD_ORGANIZATION: ${{ vars.SOURCEORGANIZATION }}
        TF_API_TOKEN: ${{ secrets.SOURCETOKEN}}
        TF_WORKSPACE: ${{ vars.TF_SRC_WORKSPACE }}
      defaults:
        run:
          working-directory: .github/terraform/tfe
      steps:
        - uses: actions/checkout@v4
  
        - uses: hashicorp/setup-terraform@v3
          id: terraform-setup
          with:
            cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
  
        - name: Terraform Init
          id: init
          run: terraform init
  
        - name: Terraform create CI workspaces
          run: |
            terraform apply \
            -var "organization=$TF_CLOUD_ORGANIZATION" \
            --auto-approve -input=false
  
    tfm-list-test:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: initialize-tfc-resources
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
          
        - name: Print version
          run: ./tfm --version
  
        - name: List organization source
          run: ./tfm list organization
    
        - name: List organization destination
          run: ./tfm list organization --side destination
  
        - name: List ssh key id source
          run: ./tfm list ssh
    
        - name: List ssh key id destination
          run: ./tfm list ssh --side destination
  
        - name: List teams source
          run: ./tfm list teams
        
        - name: List teams destination
          run: ./tfm list teams --side destination
  
        - name: List workspaces source
          run: ./tfm list workspaces
  
        - name: List workspaces source in JSON format
          run: ./tfm list workspaces --json
  
        - name: List workspaces destination
          run: ./tfm list workspaces --side destination
  
        - name: List workspaces destination in JSON format
          run: ./tfm list workspaces --side destination --json
    
        - name: List vcs source
          run: ./tfm list vcs --side source
  
        - name: List vcs source all
          run: ./tfm list vcs --side source --all
    
        - name: List vcs destination
          run: ./tfm list vcs --side destination
  
        - name: List vcs destination all
          run: ./tfm list vcs --side destination --all
  
        - name: List projects source
          run: ./tfm list projects
  
        - name: List projects source in JSON format
          run: ./tfm list projects --json
  
        - name: List projects destination
          run: ./tfm list projects --side destination
  
        - name: List projects destination --json
          run: ./tfm list projects --side destination --json
  
    tfm-copy-all-workspaces:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: tfm-list-test
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
  
        - name: Migrate teams
          run: ./tfm copy teams --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: List teams destination
          run: ./tfm list teams --side destination
  
        - name: Migrate varsets
          run: ./tfm copy varsets --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Workspaces
          run: ./tfm copy workspaces --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl

        - name: Migrate Workspaces ssh
          run: ./tfm copy workspaces --ssh --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Workspaces state
          run: ./tfm copy workspaces --state --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
        
        - name: Migrate Workspaces teamaccess
          run: ./tfm copy workspaces --teamaccess --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Workspaces vars
          run: ./tfm copy workspaces --vars --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Workspaces vcs
          run: ./tfm copy workspaces --vcs --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate workspaces agent pool
          run: ./tfm copy workspaces --agents --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Workspace Last X State Test
          run: ./tfm copy workspaces --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
        
        - name: Migrate Workspace Last X State Test --states --last 2 --autoapprove=true
          run: ./tfm copy workspaces --autoapprove=true --state --last 2 --config test/configs/.e2e-all-workspaces-test.hcl --autoapprove=true
        
        # Not locking or unlocking all workspaces incase select workspaces are manually locked
        # - name: Lock workspaces source 
        #   run: ./tfm lock workspaces --config test/configs/.e2e-all-workspaces-test.hcl
  
        # - name: Lock workspaces destination
        #   run: ./tfm lock workspaces --side destination --config test/configs/.e2e-all-workspaces-test.hcl
  
        # - name: Unlock workspaces source
        #   run: ./tfm unlock workspaces --config test/configs/.e2e-all-workspaces-test.hcl
  
        # - name: Unlock workspaces destination
        #   run: ./tfm unlock workspaces --side destination --config test/configs/.e2e-all-workspaces-test.hcl
  
        - name: Migrate Remote State Sharing
          run: ./tfm copy workspaces --remote-state-sharing --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
        
        - name: Migrate Remote State Sharing Consolidation
          run: ./tfm copy workspaces --remote-state-sharing --consolidate-global --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
        
        - name: Migrate Run Triggers 
          run: ./tfm copy workspaces --run-triggers --autoapprove=true --config test/configs/.e2e-all-workspaces-test.hcl
        
        - name: List workspaces in destination
          run: ./tfm list workspaces --side destination
  
        - name: Destroy resources that were copied to the destination org
          run: ./test/cleanup/e2e-nuke.sh
  
        #- name: Destroy extra workspaces in the destination not part of the ci test
        #  run: ./tfm nuke workspaces --autoapprove=true
  
    tfm-copy-workspaces-list:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: tfm-copy-all-workspaces
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
          
        - name: Migrate teams
          run: ./tfm copy teams --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: List teams destination
          run: ./tfm list teams --side destination
  
        - name: Migrate varsets
          run: ./tfm copy varsets --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspaces
          run: ./tfm copy workspaces --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspaces ssh
          run: ./tfm copy workspaces --ssh --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspaces state
          run: ./tfm copy workspaces --state --config test/configs/.e2e-workspaces-list-test.hcl
        
        - name: Migrate Workspaces teamaccess
          run: ./tfm copy workspaces --teamaccess --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspaces vars
          run: ./tfm copy workspaces --vars --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspaces vcs
          run: ./tfm copy workspaces --vcs --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate workspaces agent pool
          run: ./tfm copy workspaces --agents --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Migrate Workspace Last X State Test
          run: ./tfm copy workspaces --config test/configs/.e2e-workspaces-list-test.hcl
        
        - name: Migrate Workspace Last X State Test --states --last 2 --autoapprove=true
          run: ./tfm copy workspaces --state --last 2 --config test/configs/.e2e-workspaces-list-test.hcl --autoapprove=true

        - name: Migrate Remote State Sharing
          run: ./tfm copy workspaces --remote-state-sharing --autoapprove=true --config test/configs/.e2e-workspaces-list-test.hcl
        
        - name: Migrate Remote State Sharing Consolidation
          run: ./tfm copy workspaces --remote-state-sharing --consolidate-global --autoapprove=true --config test/configs/.e2e-workspaces-list-test.hcl

        - name: Migrate Run Triggers 
          run: ./tfm copy workspaces --run-triggers --autoapprove=true --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Lock workspaces source
          run: ./tfm lock workspaces --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Lock workspaces destination
          run: ./tfm lock workspaces --side destination --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Unlock workspaces source
          run: ./tfm unlock workspaces --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: Unlock workspaces destination
          run: ./tfm unlock workspaces --side destination --config test/configs/.e2e-workspaces-list-test.hcl
  
        - name: List workspaces destination
          run: ./tfm list workspaces --side destination
  
        - name: Destroy resources that were copied to the destination org
          run: ./test/cleanup/e2e-nuke.sh
  
    tfm-tests-workspace-map:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: tfm-copy-workspaces-list
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
          
        - name: Migrate teams
          run: ./tfm copy teams --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: List teams destination
          run: ./tfm list teams --side destination
  
        - name: Migrate varsets
          run: ./tfm copy varsets --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspaces
          run: ./tfm copy workspaces --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspaces ssh
          run: ./tfm copy workspaces --ssh --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspaces state
          run: ./tfm copy workspaces --state --config test/configs/.e2e-workspace-map-test.hcl
        
        - name: Migrate Workspaces teamaccess
          run: ./tfm copy workspaces --teamaccess --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspaces vars
          run: ./tfm copy workspaces --vars --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspaces vcs
          run: ./tfm copy workspaces --vcs --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate workspaces agent pool
          run: ./tfm copy workspaces --agents --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Migrate Workspace Last X State Test
          run: ./tfm copy workspaces --config test/configs/.e2e-workspace-map-test.hcl
        
        - name: Migrate Workspace Last X State Test --states --last 2 --autoapprove=true
          run: ./tfm copy workspaces --state --last 2 --config test/configs/.e2e-workspace-map-test.hcl --autoapprove=true

        - name: Migrate Remote State Sharing
          run: ./tfm copy workspaces --remote-state-sharing --config test/configs/.e2e-workspace-map-test.hcl
        
        - name: Migrate Remote State Sharing Consolidation
          run: ./tfm copy workspaces --remote-state-sharing --consolidate-global --config test/configs/.e2e-workspace-map-test.hcl

        - name: Migrate Run Triggers 
          run: ./tfm copy workspaces --run-triggers --autoapprove=true --config test/configs/.e2e-workspace-map-test.hcl
      
        - name: Lock workspaces source
          run: ./tfm lock workspaces --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Lock workspaces destination
          run: ./tfm lock workspaces --side destination --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Unlock workspaces source
          run: ./tfm unlock workspaces --config test/configs/.e2e-workspace-map-test.hcl
  
        - name: Unlock workspaces destination
          run: ./tfm unlock workspaces --side destination --config test/configs/.e2e-workspace-map-test.hcl
        
        - name: List workspaces destination
          run: ./tfm list workspaces --side destination
  
        - name: Destroy resources that were copied to the destination org
          run: ./test/cleanup/e2e-nuke.sh
  
    tfm-copy-workspaces-list-destination-agent:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: tfm-tests-workspace-map
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
  
        - name: Migrate teams
          run: ./tfm copy teams --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: List teams destination
          run: ./tfm list teams --side destination
  
        - name: Migrate varsets
          run: ./tfm copy varsets --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspaces
          run: ./tfm copy workspaces --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspaces ssh
          run: ./tfm copy workspaces --ssh --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspaces state
          run: ./tfm copy workspaces --state --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
        
        - name: Migrate  Workspaces teamaccess
          run: ./tfm copy workspaces --teamaccess --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspaces vars
          run: ./tfm copy workspaces --vars --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspaces vcs
          run: ./tfm copy workspaces --vcs --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate workspaces agent pool
          run: ./tfm copy workspaces --agents --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Migrate Workspace Last X State Test
          run: ./tfm copy workspaces --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
        
        - name: Migrate Workspace Last X State Test --states --last 2 --autoapprove=true
          run: ./tfm copy workspaces --autoapprove=true --state --last 2 --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl --autoapprove=true

        - name: Migrate Remote State Sharing
          run: ./tfm copy workspaces --remote-state-sharing --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
        
        - name: Migrate Remote State Sharing Consolidation
          run: ./tfm copy workspaces --remote-state-sharing --consolidate-global --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl

        - name: Migrate Run Triggers 
          run: ./tfm copy workspaces --run-triggers --autoapprove=true --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
    
        - name: Lock workspaces source
          run: ./tfm lock workspaces --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Lock workspaces destination
          run: ./tfm lock workspaces --side destination --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Unlock workspaces source
          run: ./tfm unlock workspaces --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: Unlock workspaces destination
          run: ./tfm unlock workspaces --side destination --config test/configs/.e2e-workspaces-list-destination-agent-test.hcl
  
        - name: List workspaces in destination
          run: ./tfm list workspaces --side destination
  
        - name: Destroy resources that were copied to the destination org
          run: ./test/cleanup/e2e-nuke.sh
  
        #- name: Destroy extra workspaces in the destination not part of the ci test
        #  run: ./tfm nuke workspaces --autoapprove=true
  
    tfm-tests-copy-all-projects:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: initialize-tfc-resources
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
  
        - name: Migrate projects
          run: ./tfm copy projects --autoapprove=true --config test/configs/.e2e-all-projects-test.hcl
  
    tfm-tests-copy-list-projects:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: initialize-tfc-resources
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
  
        - name: Migrate projects
          run: ./tfm copy projects --config test/configs/.e2e-project-list-test.hcl
  
    tfm-tests-copy-map-projects:
      runs-on: ubuntu-latest
      env: 
        SRC_TFE_HOSTNAME: ${{vars.SOURCEHOSTNAME}}
        SRC_TFE_ORG: ${{vars.SOURCEORGANIZATION}}
        SRC_TFE_TOKEN: ${{secrets.SOURCETOKEN}}
        DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
        DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
        DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
        RUNNUKE: ${{ github.event.inputs.RunNuke }}
        DST_TFC_PROJECT_ID: ${{ vars.DST_PROJECT_ID}}
  
      needs: initialize-tfc-resources
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Set up Go
          uses: actions/setup-go@v5
          with:
            go-version-file: 'go.mod'
            cache: true
        - name: Run GoReleaser
          uses: goreleaser/goreleaser-action@v6
          with:
            distribution: goreleaser
            version: "~> v2"
            args: build --clean --skip validate --single-target --output "./tfm"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Print version
          run: ./tfm --version
  
        - name: Build config files
          run: ./test/configs/build-configs.sh
  
        - name: Migrate projects
          run: ./tfm copy projects --config test/configs/.e2e-project-map-test.hcl
  
  
    # tfm-tests-ce-to-tfc-migration:
    #   runs-on: ubuntu-latest
    #   env: 
    #     DST_TFC_HOSTNAME: ${{vars.DESTINATIONHOSTNAME}}
    #     DST_TFC_ORG: ${{vars.DESTINATIONORGANIZATION}}
    #     DST_TFC_TOKEN: ${{secrets.DESTINATIONTOKEN}}
    #     GITHUB_USERNAME: ${{secrets.GHUSERNAME}}
    #     GITHUB_ORGANIZATION: ${{secrets.GHORGANIZATION}}
    #     GITHUB_TOKEN: ${{secrets.GHTOKEN}}
    #     RUNNUKE: ${{ github.event.inputs.RunNuke }}
  
    #   needs: initialize-tfc-resources
  
    # steps:
    #   - name: Checkout
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0
    #   - name: Set up Go
    #     uses: actions/setup-go@v5
    #     with:
    #       go-version-file: 'go.mod'
    #       cache: true
    #   - name: Run GoReleaser
    #     uses: goreleaser/goreleaser-action@v6
    #     with:
    #       distribution: goreleaser
    #       version: "~> v2"
    #       args: build --clean --skip validate --single-target --output "./tfm"
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    #     - name: Print version
    #       run: ./tfm --version
  
    #     - name: Build config files
    #       run: ./test/configs/build-configs.sh
  
    #     - name: Create Repos Clone Path ./test
    #       run: mkdir ./test
  
    #     - name: Clone GitHub repos rivendell, mordor2, and isengard to .
    #       run: ./tfm core clone --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Retrieve State Files
    #       run: ./tfm core getstate --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Create Workspaces
    #       run: ./tfm core create-workspaces --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Upload State Files
    #       run: ./tfm core upload-state --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Link GitHub Repo to Workspace
    #       run: ./tfm core link-vcs --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Remove backend{} blocks
    #       run: ./tfm core remove-backend --autoapprove --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Removed Cloned Repos From ./test
    #       run: ./tfm core cleanup --autoapprove --config test/configs/.e2e-ce-to-tfc-test.hcl
  
    #     - name: Remove created TFC Workspaces
    #       run: ./tfm nuke workspaces --autoapprove=true
  
  
    destroy-tfc-resources:
      runs-on: "ubuntu-latest"
      defaults:
        run:
          working-directory: .github/terraform/tfe
      env:
        TF_CLOUD_ORGANIZATION: ${{ vars.SOURCEORGANIZATION }}
        TF_API_TOKEN: ${{ secrets.SOURCETOKEN}}
        TF_WORKSPACE: ${{ vars.TF_SRC_WORKSPACE }}
  
      needs: tfm-copy-workspaces-list-destination-agent
  
      steps:
        - uses: actions/checkout@v4
  
        - uses: hashicorp/setup-terraform@v3
          id: terraform-setup
          with:
            cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
  
        - name: Terraform Init
          id: init
          run: terraform init
  
        - name: Terraform destroy CI workspaces
          run: |
            terraform destroy \
            -var "organization=$TF_CLOUD_ORGANIZATION" \
            --auto-approve -input=false
  